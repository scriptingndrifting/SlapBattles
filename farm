local player = game:GetService("Players").LocalPlayer

local safeArenaPos = Vector3.new(0, 150, 0)

local active = true
local farming = false

game:GetService("Workspace").DEATHBARRIER.CanTouch = false
game:GetService("Workspace").DEATHBARRIER2.CanTouch = false
game:GetService("Workspace").dedBarrier.CanTouch = false
game:GetService("Workspace").Lobby.brazil.portal.CanTouch = false

local arenaPart = game:GetService("Workspace").Lobby.Teleport1

function tpArena()
    local character = player.Character or player.CharacterAdded:Wait()
    if not character then return end
    local humanoid = character:FindFirstChild("Humanoid")
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

    if not humanoid or not humanoidRootPart then return end

    humanoidRootPart.CFrame = arenaPart.CFrame
    task.wait()
    local connection
    connection = game:GetService("RunService").Heartbeat:Connect(function()
        if not humanoidRootPart then return end
        humanoidRootPart.CFrame = CFrame.new(TPArenaPos, TPArenaPos + humanoidRootPart.CFrame.LookVector)
        for _, v in pairs(character:GetChildren()) do
            if v:IsA("BasePart") then v.CFrame = humanoidRootPart.CFrame end
        end
        humanoidRootPart.AssemblyLinearVelocity = Vector3.zero
    end)
    task.wait(0.5)
    connection:Disconnect()
end

function StartFarm()
    local character = player.Character
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not (character and hrp) then
        return
    end
    local tool = character:FindFirstChildOfClass("Tool")
    if not tool then
        tool = player.Backpack:FindFirstChildOfClass("Tool")
        tool.Parent = character

        if not tool then
            return
        end
    end
    farming = true

    local hitbox = tool.Glove

    for _, v in ipairs(character:GetChildren()) do
        if v:IsA("BasePart") then
            v.CanTouch = false
            v.CanQuery = false
        end
    end

    while true do
        if not (active and farming) then warn("Stopped successfuly!"); return end

        for _, tPlayer in ipairs(game:GetService("Players"):GetPlayers()) do
            local function hitTarget()
                if not (active and farming) then return 1 end

                if not (player.Character) then
                    return 2
                end
                local character = player.Character

                if not (tool) then
                    tpArena()
                    if not character then return 2 end
                    
                    local tool = character:FindFirstChildOfClass("Tool")
                    if not tool then
                        tool = player.Backpack:FindFirstChildOfClass("Tool")
                        tool.Parent = character

                        if not tool then
                            return 2
                        end
                    end
                end

                local hrp = character:FindFirstChild("HumanoidRootPart")
                if not (character and hrp) then
                    return 2
                end
                -- Position Checks

                local checks = {
                    hrp.CFrame.Position.Y < -14,
                    hrp.CFrame.Position.Y > 170,
                    (hrp.CFrame.Position - safeArenaPos).Magnitude > 500
                }

                if table.find(checks, true) then
                    hrp.CFrame = CFrame.new(safeArenaPos)
                    hrp.AssemblyLinearVelocity = Vector3.zero
                    hrp.AssemblyAngularVelocity = Vector3.zero
                end

                if tPlayer == player or not tPlayer.Character then return 2 end
                local isInArena = tPlayer.Character:FindFirstChild("isInArena")
                if not (isInArena and isInArena.Value == true) then return 2 end

                local target = tPlayer.Character:FindFirstChild("HumanoidRootPart")
                if not target then return 2 end

                -- Position Checks

                local checks = {
                    target.CFrame.Position.Y < -20,
                    target.CFrame.Position.Y > 165,
                    (target.CFrame.Position - safeArenaPos).Magnitude > 500
                }
                if table.find(checks, true) then return 2 end


                tool.GripPos = Vector3.new(14, 4, -2)
                local dir = CFrame.new(Vector3.new(0, target.CFrame.Position.Y, 0), target.CFrame.Position).LookVector
                local tPos = target.CFrame.Position + Vector3.new(0, 14, 0) - dir * 3
                local tCF = CFrame.new(tPos, tPos + dir)

                hitbox.CFrame = target.CFrame

                for _, v in ipairs(character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CFrame = tCF
                        v.AssemblyLinearVelocity = Vector3.zero
                        v.AssemblyAngularVelocity = Vector3.zero
                    end
                end
            end

            local hittingTarget = true

            local delay = task.delay(1.4, function()
                hittingTarget = false
            end)
            local delay2 = task.delay(0.5, function()
                tool:Activate()
            end)

            while task.wait() do
                local returned = hitTarget()
                if returned == 1 then
                    task.cancel(delay)
                    task.cancel(delay2)
                    return
                elseif returned == 2 then
                    task.cancel(delay)
                    task.cancel(delay2)
                    break
                end

                if hittingTarget == false then break end
            end
        end
    end
end
game:GetService("UserInputService").InputBegan:Connect(function(input, gameP)
    if not active then return end
    if gameP then return end
    if input.KeyCode == Enum.KeyCode.H then
        active = false
        onExit()
        return
    end

    if input.KeyCode == Enum.KeyCode.G then
        StartFarm()
    end
end)
